name: hygea

services:
  api-gateway:
    build:
      context: ./api-gateway
    environment:
      SERVER_PORT: 4004
      AUTH_SERVICE_URL: http://auth-service:4005
    ports:
      - "4004:4004"
    depends_on:
      patient-service:
        condition: service_started

  auth-service:
    build:
      context: ./auth-service
    environment:
      SERVER_PORT: 4005
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-service-db:5432/hygea_auth_db
      SPRING_DATASOURCE_USERNAME: hygea_auth_admin
      SPRING_DATASOURCE_PASSWORD: hygea_auth_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      JWT_SECRET: neurodevelopmental
    ports:
      - "4005:4005"
    depends_on:
      auth-service-db:
        condition: service_healthy

  auth-service-db:
    image: postgres
    environment:
      POSTGRES_DB: hygea_auth_db
      POSTGRES_USER: hygea_auth_admin
      POSTGRES_PASSWORD: hygea_auth_password
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    ports:
      - "15440:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER}\" -d \"$${POSTGRES_DB}\" -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  billing-service:
    build:
      context: ./billing-service
    ports:
      - "4001:4001"
      - "9001:9001"

  analytics-service:
    build:
      context: ./analytics-service
    environment:
      SERVER_PORT: 4002
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "4002:4002"
    depends_on:
      kafka:
        condition: service_healthy

  patient-service:
    build:
      context: ./patient-service
    environment:
      SERVER_PORT: 4000
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-service-db:5432/hygea_patient_db
      SPRING_DATASOURCE_USERNAME: hygea_patient_admin
      SPRING_DATASOURCE_PASSWORD: hygea_patient_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      BILLING_SERVICE_ADDRESS: billing-service
      BILLING_SERVICE_GRPC_PORT: "9001"
    ports:
      - "4000:4000"
    depends_on:
      patient-service-db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      billing-service:
        condition: service_started

  patient-service-db:
    image: postgres
    environment:
      POSTGRES_DB: hygea_patient_db
      POSTGRES_USER: hygea_patient_admin
      POSTGRES_PASSWORD: hygea_patient_password
    volumes:
      - patient-db-data:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER}\" -d \"$${POSTGRES_DB}\" -h localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      # Dev convenience (donâ€™t use in prod)
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1" ]
      interval: 10s
      timeout: 5s
      retries: 10


volumes:
  auth-db-data:
  patient-db-data:
  kafka-data: